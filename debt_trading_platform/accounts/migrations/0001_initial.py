# Generated by Django 5.2.5 on 2025-08-26 10:07

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('FREE', 'Free Plan'), ('BASIC', 'Basic Plan'), ('PREMIUM', 'Premium Plan'), ('PROFESSIONAL', 'Professional Plan'), ('ENTERPRISE', 'Enterprise Plan')], max_length=20)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_cycle', models.CharField(choices=[('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually'), ('LIFETIME', 'Lifetime')], max_length=20)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('max_portfolios', models.IntegerField(default=1)),
                ('max_positions_per_portfolio', models.IntegerField(default=10)),
                ('max_auto_strategies', models.IntegerField(default=0)),
                ('api_calls_per_day', models.IntegerField(default=1000)),
                ('real_time_data', models.BooleanField(default=False)),
                ('advanced_analytics', models.BooleanField(default=False)),
                ('ml_predictions', models.BooleanField(default=False)),
                ('auto_trading', models.BooleanField(default=False)),
                ('portfolio_optimization', models.BooleanField(default=False)),
                ('risk_analysis', models.BooleanField(default=False)),
                ('custom_alerts', models.BooleanField(default=False)),
                ('email_support', models.BooleanField(default=True)),
                ('priority_support', models.BooleanField(default=False)),
                ('phone_support', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_popular', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['sort_order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('key', models.CharField(max_length=64, unique=True)),
                ('secret', models.CharField(max_length=128)),
                ('key_type', models.CharField(choices=[('READ_ONLY', 'Read Only'), ('TRADING', 'Trading Enabled'), ('FULL_ACCESS', 'Full Access')], default='READ_ONLY', max_length=20)),
                ('can_read_portfolio', models.BooleanField(default=True)),
                ('can_place_orders', models.BooleanField(default=False)),
                ('can_cancel_orders', models.BooleanField(default=False)),
                ('can_withdraw', models.BooleanField(default=False)),
                ('calls_per_minute', models.IntegerField(default=60)),
                ('calls_per_day', models.IntegerField(default=10000)),
                ('total_calls', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('allowed_ips', models.TextField(blank=True, help_text='Comma-separated list of allowed IP addresses')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('risk_tolerance', models.CharField(choices=[('LOW', 'Conservative'), ('MEDIUM', 'Moderate'), ('HIGH', 'Aggressive'), ('VERY_HIGH', 'Very Aggressive')], default='MEDIUM', max_length=20)),
                ('investment_experience', models.CharField(choices=[('BEGINNER', 'Beginner (0-1 years)'), ('INTERMEDIATE', 'Intermediate (1-5 years)'), ('ADVANCED', 'Advanced (5-10 years)'), ('EXPERT', 'Expert (10+ years)')], default='BEGINNER', max_length=20)),
                ('investment_goals', models.TextField(blank=True)),
                ('preferred_currency', models.CharField(default='USD', max_length=3)),
                ('timezone', models.CharField(default='Asia/Riyadh', max_length=50)),
                ('language', models.CharField(default='en', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('push_notifications', models.BooleanField(default=True)),
                ('trading_alerts', models.BooleanField(default=True)),
                ('market_news', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('kyc_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('EXPIRED', 'Expired')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled'), ('PENDING', 'Pending Payment'), ('SUSPENDED', 'Suspended')], default='PENDING', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('auto_renew', models.BooleanField(default=True)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('subscription_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('external_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('api_calls_used', models.IntegerField(default=0)),
                ('portfolios_created', models.IntegerField(default=0)),
                ('strategies_created', models.IntegerField(default=0)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='accounts.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(default=uuid.uuid4, max_length=100, unique=True)),
                ('external_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('payment_method', models.CharField(choices=[('CREDIT_CARD', 'Credit Card'), ('DEBIT_CARD', 'Debit Card'), ('PAYPAL', 'PayPal'), ('BANK_TRANSFER', 'Bank Transfer'), ('CRYPTO', 'Cryptocurrency'), ('APPLE_PAY', 'Apple Pay'), ('GOOGLE_PAY', 'Google Pay')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('transaction_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('provider_response', models.JSONField(default=dict)),
                ('description', models.TextField(blank=True)),
                ('invoice_number', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='accounts.usersubscription')),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=150)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('success', models.BooleanField(default=False)),
                ('failure_reason', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['username', '-created_at'], name='accounts_lo_usernam_ccc69c_idx'), models.Index(fields=['ip_address', '-created_at'], name='accounts_lo_ip_addr_a49186_idx')],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], max_length=20)),
                ('trade_executions', models.BooleanField(default=True)),
                ('order_fills', models.BooleanField(default=True)),
                ('price_alerts', models.BooleanField(default=True)),
                ('portfolio_updates', models.BooleanField(default=True)),
                ('market_news', models.BooleanField(default=False)),
                ('earnings_reports', models.BooleanField(default=False)),
                ('analyst_ratings', models.BooleanField(default=False)),
                ('login_alerts', models.BooleanField(default=True)),
                ('security_alerts', models.BooleanField(default=True)),
                ('subscription_updates', models.BooleanField(default=True)),
                ('ml_predictions', models.BooleanField(default=False)),
                ('auto_trading_alerts', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
                'unique_together': {('user', 'notification_type')},
            },
        ),
    ]
