# Generated by Django 5.2.5 on 2025-08-26 09:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('market_type', models.CharField(choices=[('TASI', 'Saudi Stock Exchange (TASI)'), ('NYSE', 'New York Stock Exchange'), ('NASDAQ', 'NASDAQ'), ('LSE', 'London Stock Exchange'), ('CRYPTO', 'Cryptocurrency'), ('PRECIOUS', 'Precious Metals')], max_length=20)),
                ('country', models.CharField(max_length=50)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('sector', models.CharField(blank=True, max_length=100)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_sharia_compliant', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks', to='markets.market')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('market', 'symbol')},
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('ABOVE', 'Price Above'), ('BELOW', 'Price Below'), ('CHANGE_UP', 'Price Change Up %'), ('CHANGE_DOWN', 'Price Change Down %'), ('VOLUME', 'Volume Above')], max_length=20)),
                ('threshold', models.DecimalField(decimal_places=4, max_digits=15)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('TRIGGERED', 'Triggered'), ('EXPIRED', 'Expired'), ('DISABLED', 'Disabled')], default='ACTIVE', max_length=20)),
                ('message', models.TextField(blank=True)),
                ('triggered_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to=settings.AUTH_USER_MODEL)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='markets.stock')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('open_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('high_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('low_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('close_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('volume', models.BigIntegerField()),
                ('change', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('change_percent', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('sma_20', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('sma_50', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('rsi', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('macd', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='market_data', to='markets.stock')),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['stock', '-timestamp'], name='markets_mar_stock_i_112fb0_idx'), models.Index(fields=['timestamp'], name='markets_mar_timesta_1fdea5_idx')],
                'unique_together': {('stock', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='TradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold'), ('STRONG_BUY', 'Strong Buy'), ('STRONG_SELL', 'Strong Sell')], max_length=20)),
                ('confidence', models.CharField(choices=[('LOW', 'Low (60-69%)'), ('MEDIUM', 'Medium (70-79%)'), ('HIGH', 'High (80-89%)'), ('VERY_HIGH', 'Very High (90%+)')], max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('target_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('time_horizon', models.CharField(max_length=50)),
                ('technical_indicators', models.JSONField(default=dict)),
                ('fundamental_data', models.JSONField(default=dict)),
                ('model_name', models.CharField(max_length=100)),
                ('model_version', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='markets.stock')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['stock', '-created_at'], name='markets_tra_stock_i_7cc3b0_idx'), models.Index(fields=['signal_type', '-created_at'], name='markets_tra_signal__5b31a8_idx')],
            },
        ),
        migrations.CreateModel(
            name='Watchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stocks', models.ManyToManyField(related_name='watchlists', to='markets.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'name')},
            },
        ),
    ]
