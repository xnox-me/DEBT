# Generated by Django 5.2.5 on 2025-08-26 10:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='blue', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('alert_type', models.CharField(choices=[('PRICE_THRESHOLD', 'Price Threshold'), ('VOLUME_SPIKE', 'Volume Spike'), ('TECHNICAL_INDICATOR', 'Technical Indicator'), ('NEWS_EVENT', 'News Event'), ('PORTFOLIO_CHANGE', 'Portfolio Change'), ('RISK_METRIC', 'Risk Metric'), ('ML_PREDICTION', 'ML Prediction')], max_length=20)),
                ('symbol', models.CharField(blank=True, max_length=20)),
                ('condition_field', models.CharField(max_length=50)),
                ('condition_operator', models.CharField(max_length=10)),
                ('condition_value', models.CharField(max_length=50)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('notification_channels', models.JSONField(default=list)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('frequency', models.CharField(choices=[('ONCE', 'Once'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], default='ONCE', max_length=10)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('next_check', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('trigger_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('data', models.JSONField(blank=True, default=dict)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('status', models.CharField(choices=[('UNREAD', 'Unread'), ('READ', 'Read'), ('ARCHIVED', 'Archived'), ('DELETED', 'Deleted')], default='UNREAD', max_length=10)),
                ('related_object_type', models.CharField(blank=True, max_length=50)),
                ('related_object_id', models.CharField(blank=True, max_length=100)),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationtype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('from_email', models.EmailField(max_length=254)),
                ('to_email', models.EmailField(max_length=254)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('BOUNCED', 'Bounced')], default='QUEUED', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('provider_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to=settings.AUTH_USER_MODEL)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='notifications.notification')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertTrigger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('triggered_at', models.DateTimeField(auto_now_add=True)),
                ('trigger_data', models.JSONField(default=dict)),
                ('trigger_value', models.CharField(max_length=100)),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('alert_rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to='notifications.alertrule')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_triggers', to='notifications.notification')),
            ],
            options={
                'ordering': ['-triggered_at'],
            },
        ),
        migrations.CreateModel(
            name='PushNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.CharField(max_length=255)),
                ('platform', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('payload', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('QUEUED', 'Queued'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('FAILED', 'Failed')], default='QUEUED', max_length=10)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('provider', models.CharField(blank=True, max_length=50)),
                ('provider_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_notifications', to='notifications.notification')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='push_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('daily_digest', models.BooleanField(default=False)),
                ('weekly_digest', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='notifications.notificationtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_prefs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.CharField(max_length=255, unique=True)),
                ('platform', models.CharField(choices=[('IOS', 'iOS'), ('ANDROID', 'Android'), ('WEB', 'Web Browser')], max_length=20)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('os_version', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'device_token')},
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('EMAIL', 'Email'), ('PUSH', 'Push Notification'), ('SMS', 'SMS'), ('IN_APP', 'In-App')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('title_template', models.TextField()),
                ('message_template', models.TextField()),
                ('available_variables', models.JSONField(default=list)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='notifications.notificationtype')),
            ],
            options={
                'unique_together': {('name', 'template_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_sent', models.IntegerField(default=0)),
                ('total_read', models.IntegerField(default=0)),
                ('total_clicked', models.IntegerField(default=0)),
                ('open_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('click_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('avg_response_time', models.DurationField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_stats', to=settings.AUTH_USER_MODEL)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='notifications.notificationtype')),
            ],
            options={
                'verbose_name_plural': 'Notification Statistics',
                'unique_together': {('user', 'notification_type')},
            },
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', '-created_at'], name='notificatio_user_id_05b4bc_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['status', '-created_at'], name='notificatio_status_37b3f3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', '-created_at'], name='notificatio_priorit_3fc670_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='notificatio_expires_4f3289_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usernotificationpreference',
            unique_together={('user', 'notification_type')},
        ),
    ]
