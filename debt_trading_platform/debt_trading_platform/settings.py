"""
Django settings for debt_trading_platform project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
DEBT_ROOT = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ki13lpf=funyt5)51dfffo6^dj#@$%b4d@cikbj5xcodi+cad$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # For development, restrict in production


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Third party apps
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'channels',
    'django_extensions',
    
    # DEBT Trading Platform Apps
    'markets',
    'ml_predictions', 
    'portfolio',
    'api_gateway',
    'notifications',
    'accounts',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'debt_trading_platform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'debt_trading_platform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# DEBT Trading Platform Configuration
# ===================================

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 50
}

# CORS Configuration
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # React frontend
    "http://127.0.0.1:3000",
    "http://localhost:8080",  # Vue frontend
    "http://127.0.0.1:8080",
]

CORS_ALLOW_ALL_ORIGINS = True  # For development only

# Channels Configuration for WebSockets
ASGI_APPLICATION = 'debt_trading_platform.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

# Celery Configuration for Background Tasks
CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

# Auto-Trading Configuration
AUTO_TRADING_ENABLED = True
PAPER_TRADING_MODE = True  # Start with paper trading
MAX_CONCURRENT_TRADES = 50
DEFAULT_TRADING_HOURS = {
    'start': '09:00',
    'end': '16:00',
    'timezone': 'Asia/Riyadh'
}

# N8N Integration
N8N_BASE_URL = os.environ.get('N8N_BASE_URL', 'http://localhost:5678')
N8N_API_KEY = os.environ.get('N8N_API_KEY', None)
N8N_WEBHOOK_BASE_URL = os.environ.get('N8N_WEBHOOK_BASE_URL', 'http://localhost:5678/webhook')

# Risk Management
DEFAULT_RISK_SETTINGS = {
    'max_portfolio_risk': 20.0,  # Percentage
    'max_position_size': 5.0,    # Percentage
    'stop_loss_default': 5.0,    # Percentage
    'take_profit_default': 15.0, # Percentage
    'max_daily_loss': 2.0,       # Percentage
}

# DEBT Integration Paths
DEBT_ROOT_PATH = str(DEBT_ROOT)
DEBT_API_PLUGIN_PATH = DEBT_ROOT / 'api_plugin.py'
DEBT_TASI_PATH = DEBT_ROOT / 'tasi_market_intelligence'
DEBT_GLOBAL_MARKETS_PATH = DEBT_ROOT / 'global_markets_intelligence'
DEBT_ML_PATH = DEBT_ROOT / 'sophisticated_example' / 'ml_pipeline'

# Market Data Configuration
MARKET_DATA_UPDATE_INTERVAL = 30  # seconds
TASI_COMPANIES = [
    '2222.SR',  # Saudi Aramco
    '1120.SR',  # Al Rajhi Bank
    '2030.SR',  # SABIC
    '1180.SR',  # Al Rajhi Company
    '2380.SR',  # Petrochemical Industries Company
]

GLOBAL_MARKETS = {
    'USA': ['AAPL', 'MSFT', 'TSLA', 'GOOGL', 'AMZN'],
    'UK': ['SHEL.L', 'BP.L', 'VOD.L'],
    'CRYPTO': ['BTC-USD', 'ETH-USD', 'BNB-USD'],
    'PRECIOUS': ['GC=F', 'SI=F']  # Gold, Silver futures
}

# Machine Learning Configuration
ML_MODEL_UPDATE_INTERVAL = 3600  # 1 hour
ML_PREDICTION_CACHE_TIMEOUT = 1800  # 30 minutes

# Static and Media Files
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': DEBT_ROOT / 'logs' / 'django_trading.log',
            'formatter': 'verbose',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'debt_trading': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Security Settings (for production)
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 86400
    SECURE_REDIRECT_EXEMPT = []
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
