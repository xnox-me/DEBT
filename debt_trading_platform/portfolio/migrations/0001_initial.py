# Generated by Django 5.2.5 on 2025-08-26 09:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('markets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BenchmarkWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.DecimalField(decimal_places=4, max_digits=5)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='markets.stock')),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('portfolio_type', models.CharField(choices=[('AGGRESSIVE', 'Aggressive Growth'), ('MODERATE', 'Moderate Growth'), ('CONSERVATIVE', 'Conservative'), ('INCOME', 'Income Focused'), ('BALANCED', 'Balanced'), ('CUSTOM', 'Custom Strategy')], default='BALANCED', max_length=20)),
                ('base_currency', models.CharField(choices=[('USD', 'US Dollar'), ('SAR', 'Saudi Riyal'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan')], default='USD', max_length=3)),
                ('initial_value', models.DecimalField(decimal_places=2, default=100000, max_digits=15)),
                ('current_value', models.DecimalField(decimal_places=2, default=100000, max_digits=15)),
                ('cash_balance', models.DecimalField(decimal_places=2, default=100000, max_digits=15)),
                ('max_position_size', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('stop_loss_percentage', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('take_profit_percentage', models.DecimalField(decimal_places=2, default=15.0, max_digits=5)),
                ('total_return', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('total_return_percentage', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('annualized_return', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('max_drawdown', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('volatility', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('stock_allocation_target', models.DecimalField(decimal_places=2, default=70.0, max_digits=5)),
                ('bond_allocation_target', models.DecimalField(decimal_places=2, default=20.0, max_digits=5)),
                ('cash_allocation_target', models.DecimalField(decimal_places=2, default=10.0, max_digits=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_paper_trading', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioBenchmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=20, unique=True)),
                ('benchmark_type', models.CharField(choices=[('INDEX', 'Market Index'), ('ETF', 'Exchange Traded Fund'), ('CUSTOM', 'Custom Benchmark')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('stocks', models.ManyToManyField(related_name='benchmarks', through='portfolio.BenchmarkWeight', to='markets.stock')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='benchmarkweight',
            name='benchmark',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfoliobenchmark'),
        ),
        migrations.CreateModel(
            name='PortfolioOptimization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optimization_method', models.CharField(choices=[('MEAN_VARIANCE', 'Mean Variance Optimization'), ('RISK_PARITY', 'Risk Parity'), ('BLACK_LITTERMAN', 'Black-Litterman'), ('MINIMUM_VARIANCE', 'Minimum Variance'), ('MAXIMUM_SHARPE', 'Maximum Sharpe Ratio')], max_length=20)),
                ('target_return', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('target_risk', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('constraints', models.JSONField(default=dict)),
                ('recommended_allocations', models.JSONField(default=dict)),
                ('current_allocations', models.JSONField(default=dict)),
                ('expected_return', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('expected_risk', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('expected_sharpe', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('is_implemented', models.BooleanField(default=False)),
                ('implementation_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='optimizations', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_type', models.CharField(choices=[('LONG', 'Long Position'), ('SHORT', 'Short Position')], default='LONG', max_length=10)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=15)),
                ('entry_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('current_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('unrealized_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('realized_pnl', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('stop_loss_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('take_profit_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('portfolio_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('PARTIAL', 'Partially Closed')], default='OPEN', max_length=20)),
                ('opened_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='portfolio.portfolio')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='markets.stock')),
            ],
            options={
                'ordering': ['-opened_at'],
            },
        ),
        migrations.CreateModel(
            name='RebalancingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually'), ('THRESHOLD', 'Threshold Based')], max_length=20)),
                ('deviation_threshold', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('target_allocations', models.JSONField(default=dict)),
                ('auto_execute', models.BooleanField(default=False)),
                ('last_rebalanced', models.DateTimeField(blank=True, null=True)),
                ('next_rebalance_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rebalancing_rules', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RiskMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calculation_date', models.DateField()),
                ('period_days', models.IntegerField(default=252)),
                ('var_95', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('var_99', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('expected_shortfall', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('portfolio_volatility', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('portfolio_beta', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('correlation_to_market', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('concentration_risk', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('largest_position_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('top_5_concentration', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sector_diversification_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('geographic_diversification_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('liquidity_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('overall_risk_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('risk_rating', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risk_metrics', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-calculation_date'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('DIVIDEND', 'Dividend'), ('SPLIT', 'Stock Split'), ('DEPOSIT', 'Cash Deposit'), ('WITHDRAWAL', 'Cash Withdrawal')], max_length=20)),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('cash_impact', models.DecimalField(decimal_places=2, max_digits=15)),
                ('notes', models.TextField(blank=True)),
                ('executed_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.portfolio')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='portfolio.position')),
                ('stock', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='markets.stock')),
            ],
            options={
                'ordering': ['-executed_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='benchmarkweight',
            unique_together={('benchmark', 'stock')},
        ),
        migrations.CreateModel(
            name='PortfolioPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('portfolio_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('cash_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('positions_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('daily_return', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('daily_pnl', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('total_return', models.DecimalField(decimal_places=4, max_digits=8)),
                ('total_return_percentage', models.DecimalField(decimal_places=4, max_digits=8)),
                ('benchmark_return', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('alpha', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_history', to='portfolio.portfolio')),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['portfolio', '-date'], name='portfolio_p_portfol_2dc2f7_idx')],
                'unique_together': {('portfolio', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['portfolio', 'status'], name='portfolio_p_portfol_6b0dab_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['stock', 'status'], name='portfolio_p_stock_i_878081_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='riskmetrics',
            unique_together={('portfolio', 'calculation_date')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['portfolio', '-executed_at'], name='portfolio_t_portfol_f727de_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_type', '-executed_at'], name='portfolio_t_transac_dcb71d_idx'),
        ),
    ]
