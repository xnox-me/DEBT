# Generated by Django 5.2.5 on 2025-08-26 09:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('markets', '0001_initial'),
        ('portfolio', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('webhook_type', models.CharField(choices=[('SIGNAL', 'Trading Signal'), ('EXECUTION', 'Trade Execution'), ('STATUS', 'Status Update'), ('ALERT', 'Alert Notification')], max_length=20)),
                ('endpoint_url', models.URLField()),
                ('secret_key', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('retry_count', models.IntegerField(default=3)),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('custom_headers', models.JSONField(default=dict)),
                ('auth_type', models.CharField(choices=[('NONE', 'None'), ('BEARER', 'Bearer Token'), ('BASIC', 'Basic Auth'), ('API_KEY', 'API Key')], default='NONE', max_length=20)),
                ('auth_credentials', models.JSONField(default=dict)),
                ('total_calls', models.IntegerField(default=0)),
                ('successful_calls', models.IntegerField(default=0)),
                ('last_called', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Trading Webhook',
                'verbose_name_plural': 'Trading Webhooks',
            },
        ),
        migrations.CreateModel(
            name='AutoTradingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('strategy_type', models.CharField(choices=[('ML_SIGNALS', 'ML-Based Signals'), ('TECHNICAL', 'Technical Analysis'), ('MOMENTUM', 'Momentum Trading'), ('MEAN_REVERSION', 'Mean Reversion'), ('ARBITRAGE', 'Arbitrage'), ('CUSTOM', 'Custom Strategy')], max_length=20)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('PAUSED', 'Paused'), ('STOPPED', 'Stopped'), ('ERROR', 'Error')], default='PAUSED', max_length=20)),
                ('symbols', models.JSONField(default=list, help_text='List of symbols to trade')),
                ('max_position_size', models.DecimalField(decimal_places=2, default=1000, max_digits=10)),
                ('max_daily_trades', models.IntegerField(default=10)),
                ('risk_per_trade', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('strategy_parameters', models.JSONField(default=dict, help_text='Strategy-specific parameters')),
                ('n8n_workflow_id', models.CharField(blank=True, max_length=100, null=True)),
                ('n8n_webhook_url', models.URLField(blank=True, null=True)),
                ('webhook_secret', models.CharField(blank=True, max_length=100, null=True)),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('total_profit_loss', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('win_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_executed', models.DateTimeField(blank=True, null=True)),
                ('portfolio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.portfolio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auto_strategies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Auto Trading Strategy',
                'verbose_name_plural': 'Auto Trading Strategies',
            },
        ),
        migrations.CreateModel(
            name='AutoTradingSignal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signal_type', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell'), ('HOLD', 'Hold'), ('CLOSE', 'Close Position')], max_length=10)),
                ('confidence', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('VERY_HIGH', 'Very High')], max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('target_price', models.DecimalField(decimal_places=4, max_digits=15)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('quantity', models.DecimalField(decimal_places=4, max_digits=15)),
                ('technical_data', models.JSONField(default=dict)),
                ('n8n_execution_id', models.CharField(blank=True, max_length=100, null=True)),
                ('webhook_sent_at', models.DateTimeField(blank=True, null=True)),
                ('execution_response', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('GENERATED', 'Generated'), ('SENT', 'Sent to N8N'), ('EXECUTED', 'Executed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='GENERATED', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='markets.stock')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signals', to='portfolio.autotradingstrategy')),
            ],
            options={
                'verbose_name': 'Auto Trading Signal',
                'verbose_name_plural': 'Auto Trading Signals',
            },
        ),
        migrations.CreateModel(
            name='TradingBotConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_enabled', models.BooleanField(default=False)),
                ('paper_trading', models.BooleanField(default=True)),
                ('max_daily_loss', models.DecimalField(decimal_places=2, default=1000, max_digits=15)),
                ('max_portfolio_exposure', models.DecimalField(decimal_places=2, default=80, max_digits=5)),
                ('max_position_size', models.DecimalField(decimal_places=2, default=5, max_digits=5)),
                ('trading_start_time', models.TimeField(default='09:00:00')),
                ('trading_end_time', models.TimeField(default='16:00:00')),
                ('trading_timezone', models.CharField(default='Asia/Riyadh', max_length=50)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('webhook_notifications', models.BooleanField(default=True)),
                ('n8n_server_url', models.URLField(blank=True, null=True)),
                ('n8n_api_key', models.CharField(blank=True, max_length=100, null=True)),
                ('n8n_webhook_base_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bot_config', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trading Bot Configuration',
                'verbose_name_plural': 'Trading Bot Configurations',
            },
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n8n_execution_id', models.CharField(max_length=100, unique=True)),
                ('workflow_name', models.CharField(max_length=200)),
                ('input_data', models.JSONField(default=dict)),
                ('output_data', models.JSONField(default=dict)),
                ('execution_status', models.CharField(choices=[('RUNNING', 'Running'), ('SUCCESS', 'Success'), ('ERROR', 'Error'), ('WAITING', 'Waiting'), ('CANCELLED', 'Cancelled')], max_length=20)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('nodes_executed', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField()),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('signal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.autotradingsignal')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='portfolio.autotradingstrategy')),
            ],
            options={
                'verbose_name': 'Workflow Execution',
                'verbose_name_plural': 'Workflow Executions',
            },
        ),
        migrations.CreateModel(
            name='AutoTradingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], max_length=20)),
                ('category', models.CharField(choices=[('SIGNAL_GENERATION', 'Signal Generation'), ('STRATEGY_EXECUTION', 'Strategy Execution'), ('WEBHOOK_CALL', 'Webhook Call'), ('TRADE_EXECUTION', 'Trade Execution'), ('ERROR_HANDLING', 'Error Handling'), ('PERFORMANCE', 'Performance')], max_length=30)),
                ('message', models.TextField()),
                ('context_data', models.JSONField(default=dict)),
                ('stack_trace', models.TextField(blank=True)),
                ('execution_time_ms', models.IntegerField(blank=True, null=True)),
                ('memory_usage_mb', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('signal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.autotradingsignal')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='portfolio.autotradingstrategy')),
                ('execution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='portfolio.workflowexecution')),
            ],
            options={
                'verbose_name': 'Auto Trading Log',
                'verbose_name_plural': 'Auto Trading Logs',
            },
        ),
        migrations.AddIndex(
            model_name='autotradingstrategy',
            index=models.Index(fields=['user', 'status'], name='portfolio_a_user_id_dfa7d9_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradingstrategy',
            index=models.Index(fields=['strategy_type', 'status'], name='portfolio_a_strateg_48a257_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradingsignal',
            index=models.Index(fields=['strategy', '-created_at'], name='portfolio_a_strateg_083d6b_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradingsignal',
            index=models.Index(fields=['stock', 'signal_type'], name='portfolio_a_stock_i_3b8cad_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradingsignal',
            index=models.Index(fields=['status', '-created_at'], name='portfolio_a_status_e81643_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['strategy', '-started_at'], name='portfolio_w_strateg_6b546a_idx'),
        ),
        migrations.AddIndex(
            model_name='workflowexecution',
            index=models.Index(fields=['execution_status'], name='portfolio_w_executi_903a31_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradinglog',
            index=models.Index(fields=['strategy', '-timestamp'], name='portfolio_a_strateg_101f77_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradinglog',
            index=models.Index(fields=['level', '-timestamp'], name='portfolio_a_level_135e4a_idx'),
        ),
        migrations.AddIndex(
            model_name='autotradinglog',
            index=models.Index(fields=['category', '-timestamp'], name='portfolio_a_categor_8e8cff_idx'),
        ),
    ]
