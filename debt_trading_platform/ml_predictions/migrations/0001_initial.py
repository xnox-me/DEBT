# Generated by Django 5.2.5 on 2025-08-26 09:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('markets', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('LSTM', 'Long Short-Term Memory'), ('ARIMA', 'AutoRegressive Integrated Moving Average'), ('RF', 'Random Forest'), ('SVM', 'Support Vector Machine'), ('LINEAR', 'Linear Regression'), ('ENSEMBLE', 'Ensemble Model')], max_length=20)),
                ('prediction_type', models.CharField(choices=[('PRICE', 'Price Prediction'), ('TREND', 'Trend Direction'), ('VOLATILITY', 'Volatility Forecast'), ('SIGNAL', 'Trading Signal'), ('RISK', 'Risk Assessment')], max_length=20)),
                ('description', models.TextField()),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('precision', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('recall', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('f1_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('parameters', models.JSONField(default=dict)),
                ('training_data_period', models.CharField(default='1y', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-accuracy', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_data_start', models.DateField()),
                ('training_data_end', models.DateField()),
                ('validation_split', models.DecimalField(decimal_places=2, default=0.2, max_digits=3)),
                ('hyperparameters', models.JSONField(default=dict)),
                ('feature_columns', models.JSONField(default=list)),
                ('target_column', models.CharField(max_length=50)),
                ('training_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('validation_accuracy', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('training_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('validation_loss', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('training_time_seconds', models.IntegerField(blank=True, null=True)),
                ('data_points_used', models.IntegerField(blank=True, null=True)),
                ('feature_importance', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('STARTED', 'Training Started'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('STOPPED', 'Stopped')], default='STARTED', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_sessions', to='ml_predictions.mlmodel')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='TradingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('strategy_type', models.CharField(choices=[('MOMENTUM', 'Momentum Strategy'), ('MEAN_REVERSION', 'Mean Reversion'), ('BREAKOUT', 'Breakout Strategy'), ('TREND_FOLLOWING', 'Trend Following'), ('ARBITRAGE', 'Arbitrage'), ('PAIRS_TRADING', 'Pairs Trading')], max_length=20)),
                ('description', models.TextField()),
                ('entry_conditions', models.JSONField(default=dict)),
                ('exit_conditions', models.JSONField(default=dict)),
                ('risk_management', models.JSONField(default=dict)),
                ('total_return', models.DecimalField(decimal_places=4, default=0, max_digits=8)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('max_drawdown', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True)),
                ('win_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('markets', models.ManyToManyField(related_name='strategies', to='markets.market')),
                ('models_used', models.ManyToManyField(related_name='strategies', to='ml_predictions.mlmodel')),
            ],
            options={
                'ordering': ['-sharpe_ratio', '-total_return'],
            },
        ),
        migrations.CreateModel(
            name='BacktestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('initial_capital', models.DecimalField(decimal_places=2, default=100000, max_digits=15)),
                ('final_capital', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_return', models.DecimalField(decimal_places=4, max_digits=8)),
                ('annualized_return', models.DecimalField(decimal_places=4, max_digits=8)),
                ('volatility', models.DecimalField(decimal_places=4, max_digits=6)),
                ('sharpe_ratio', models.DecimalField(decimal_places=4, max_digits=6)),
                ('max_drawdown', models.DecimalField(decimal_places=4, max_digits=6)),
                ('total_trades', models.IntegerField()),
                ('winning_trades', models.IntegerField()),
                ('losing_trades', models.IntegerField()),
                ('win_rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('avg_win', models.DecimalField(decimal_places=4, max_digits=8)),
                ('avg_loss', models.DecimalField(decimal_places=4, max_digits=8)),
                ('profit_factor', models.DecimalField(decimal_places=4, max_digits=6)),
                ('daily_returns', models.JSONField(default=list)),
                ('trade_log', models.JSONField(default=list)),
                ('equity_curve', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='backtest_results', to='ml_predictions.tradingstrategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('predicted_trend', models.CharField(blank=True, max_length=20, null=True)),
                ('predicted_volatility', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('confidence', models.CharField(choices=[('VERY_LOW', 'Very Low (50-60%)'), ('LOW', 'Low (60-70%)'), ('MEDIUM', 'Medium (70-80%)'), ('HIGH', 'High (80-90%)'), ('VERY_HIGH', 'Very High (90%+)')], max_length=20)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('probability_up', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('probability_down', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('prediction_horizon', models.CharField(default='1D', max_length=20)),
                ('target_date', models.DateTimeField()),
                ('input_features', models.JSONField(default=dict)),
                ('feature_importance', models.JSONField(default=dict)),
                ('actual_price', models.DecimalField(blank=True, decimal_places=4, max_digits=15, null=True)),
                ('actual_trend', models.CharField(blank=True, max_length=20, null=True)),
                ('is_accurate', models.BooleanField(blank=True, null=True)),
                ('accuracy_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('VALIDATED', 'Validated'), ('FAILED', 'Failed')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('validated_at', models.DateTimeField(blank=True, null=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='ml_predictions.mlmodel')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_predictions', to='markets.stock')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['stock', '-created_at'], name='ml_predicti_stock_i_6ceffe_idx'), models.Index(fields=['status', '-created_at'], name='ml_predicti_status_be97a2_idx'), models.Index(fields=['confidence', '-created_at'], name='ml_predicti_confide_7ce6d5_idx')],
            },
        ),
        migrations.CreateModel(
            name='PredictionDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('prediction_types', models.JSONField(default=list)),
                ('time_horizons', models.JSONField(default=list)),
                ('layout_config', models.JSONField(default=dict)),
                ('refresh_interval', models.IntegerField(default=300)),
                ('is_public', models.BooleanField(default=False)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('models_displayed', models.ManyToManyField(related_name='dashboards', to='ml_predictions.mlmodel')),
                ('stocks_tracked', models.ManyToManyField(related_name='ml_dashboards', to='markets.stock')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ml_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('user', 'name')},
            },
        ),
    ]
